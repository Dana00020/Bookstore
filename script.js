// Product data - used on the product catalog page
const romance = [
    {
        id: 101,
        name: "Twisted Love",
        author: "Ana Huang",
        genre: "Romance",
        price: 3050,
        rating: 4,
        Publisher: "Little, Brown", 
        Pages: "368",
        description: "Twisted Love is a steamy, slow-burn romance about a cold, guarded photographer and her brother's best friendâ€”who just happens to be her new neighbor. With dark secrets, sizzling chemistry, and emotional twists, this story explores the fine line between love and obsession.",
        image: "images/twisted love.png",
    },
    {
        id: 102,
        name: "Book Lovers",
        author: "Emily Henry",
        genre: "Romance",
        price: 2500,
        rating: 5,
        Publisher: "Random House - Penguin", 
        Pages: "384",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/book lovers.jpg",
    },
    {
        id: 103,
        name: "It Ends With Us",
        author: "Colleen Hoover",
        genre: "Romance",
        price: 2000,
        rating: 5,
        Publisher: "Random House - Penguin", 
        Pages: "384",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/it ends with us.jpg",
    },
    {
        id: 104,
        name: "Love On The Brain",
        author: "Ali Hazelwood",
        genre: "Romance",
        price: 3550,
        rating: 5,
        Publisher: "Random House - Penguin", 
        Pages: "384",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/love on the brain.jpg",
    },
    
];

const mystery = [
    {
        id: 201,
        name: "The Silent Patient",
        author: "Alex Michaelides",
        genre: "Mystery",
        price: 1050,
        rating: 5,
        Publisher: "Random House - Penguin", 
        Pages: "384",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/The Silent Patient.jpg",
    },
    {
        id: 202,
        name: "Gone Girl",
        author: "Gillian Flynn",
        genre: "Mystery",
        price: 1050,
        rating: 5,
        Publisher: "Random House - Penguin", 
        Pages: "384",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/Gone Girl.jpg",
    },
    {
        id: 203,
        name: "The Girl On The Train",
        author: "Paula Hawkins",
        genre: "Mystery",
        price: 1050,
        rating: 5,
        Publisher: "Random House - Penguin", 
        Pages: "384",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/The Girl On The Train.jpg",
    },
    {
        id: 204,
        name: "The Guest List",
        author: "Lucy Foley",
        genre: "Mystery",
        price: 1050,
        rating: 5,
        Publisher: "Random House - Penguin", 
        Pages: "384",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/The Guest List.jpg",
    },
]

const fantasy = [
    {
        id: 301,
        name: "Heir Of Fire",
        author: "Sarah J. Maas",
        genre: "Fantasy",
        price: 1050,
        rating: 5,
        Publisher: "Bloomsbury", 
        Pages: "576",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/Heir of fire.jpg",
    },
    {
        id: 302,
        name: "Shadow and Bone",
        author: "Leigh Bardugo",
        genre: "Fanstasy",
        price: 1050,
        rating: 5,
        Publisher: "Henry Holt and Company (BYR)", 
        Pages: "368",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/Shadow and Bone.jpg",
    },
    {
        id: 303,
        name: "1984",
        author: "George Orwell",
        genre: "Fanstasy",
        price: 1050,
        rating: 5,
        Publisher: "Houghton Mifflin Harcourt", 
        Pages: "304",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/1984.jpg",
    },
    {
        id: 304,
        name: "Crown of Midnight",
        author: "Sarah J. Maas",
        genre: "Fanstasy",
        price: 1050,
        rating: 5,
        Publisher: "Bloomsbury Publishing", 
        Pages: "336",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/Crown of midnight.jpg",
    },
]

const bioghraphy = [
    {
        id: 401,
        name: "Becoming",
        author: "Michelle Obama",
        genre: "Bioghraphy",
        price: 1050,
        rating: 5,
        Publisher: "Bloomsbury", 
        Pages: "448",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/Becoming.jpg",
    },
    {
        id: 402,
        name: "Educated",
        author: "Tara Westover",
        genre: "Bioghraphy",
        price: 1050,
        rating: 5,
        Publisher: "Henry Holt and Company (BYR)", 
        Pages: "656",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/Educated.jpg",
    },
    {
        id: 403,
        name: "Born a Crime",
        author: "Trevor Noah",
        genre: "Bioghraphy",
        price: 1050,
        rating: 5,
        Publisher: "John Murray Press", 
        Pages: "304",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/Born a crime.jpg",
    },
    {
        id: 404,
        name: "I'm Glad My Mom Died",
        author: "Jennette McCurdy",
        genre: "Bioghraphy",
        price: 1050,
        rating: 5,
        Publisher: "Simon & Schuster", 
        Pages: "304",
        description: "Book Lovers is a witty, slow-burn romance about Nora, a sharp literary agent, and Charlie, a grumpy editor. When they keep running into each other during a summer trip to a small town, professional rivalry turns into something deeper. It's full of banter, bookish charm, and emotional growth.",
        image: "images/Im glad.jpg",
    },
]

function loadRomance() {
    const container = document.getElementById("catalog-romance");
    if (!container) return;

    romance.forEach(product => {
        const card = document.createElement("div");
        card.className = "product-card";
        card.innerHTML = `
            <div><img src="${product.image}" alt="${product.name}" class="cover"></div>
            <div><h3>${product.name}</h3>
            <h4>${product.author}</h4>
            <img src="images/stars1.png" alt="rating" id="star">
            <button class="view-more-btn" data-id="${product.id}">View More</button>
            <p class="bookprice">${product.price} â‚¸</p></div>
            <button data-id="${product.id}" class="add-to-cart"><img src="images/cart1.png" alt="cart"></button>
        `;
        container.appendChild(card);
    });
}

function loadMystery() {
    const container = document.getElementById("catalog-mystery");
    if (!container) return;

    mystery.forEach(product => {
        const card = document.createElement("div");
        card.className = "product-card";
        card.innerHTML = `
            <div><img src="${product.image}" alt="${product.name}" class="cover"></div>
            <div><h3>${product.name}</h3>
            <h4>${product.author}</h4>
            <img src="images/stars1.png" alt="rating" id="star">
            <button class="view-more-btn" data-id="${product.id}">View More</button>
            <p class="bookprice">${product.price} â‚¸</p></div>
            <button data-id="${product.id}" class="add-to-cart"><img src="images/cart1.png" alt="cart"></button>
        `;
        container.appendChild(card);
    });
}

function loadFantasy() {
    const container = document.getElementById("catalog-fantasy");
    if (!container) return;

    fantasy.forEach(product => {
        const card = document.createElement("div");
        card.className = "product-card";
        card.innerHTML = `
            <div><img src="${product.image}" alt="${product.name}" class="cover"></div>
            <div><h3>${product.name}</h3>
            <h4>${product.author}</h4>
            <img src="images/stars1.png" alt="rating" id="star">
            <button class="view-more-btn" data-id="${product.id}">View More</button>
            <p class="bookprice">${product.price} â‚¸</p></div>
            <button data-id="${product.id}" class="add-to-cart"><img src="images/cart1.png" alt="cart"></button>
        `;
        container.appendChild(card);
    });
}

function loadBiography() {
    const container = document.getElementById("catalog-biography");
    if (!container) return;

    bioghraphy.forEach(product => {
        const card = document.createElement("div");
        card.className = "product-card";
        card.innerHTML = `
            <div><img src="${product.image}" alt="${product.name}" class="cover"></div>
            <div><h3>${product.name}</h3>
            <h4>${product.author}</h4>
            <img src="images/stars1.png" alt="rating" id="star">
            <button class="view-more-btn" data-id="${product.id}">View More</button>
            <p class="bookprice">${product.price} â‚¸</p></div>
            <button data-id="${product.id}" class="add-to-cart"><img src="images/cart1.png" alt="cart"></button>
        `;
        container.appendChild(card);
    });
}

const catalog = [...romance, ...mystery,...fantasy,...bioghraphy];

function handleAddToCart() {
    document.addEventListener("click", (e) => {
        if (e.target.classList.contains("add-to-cart")) {
            const id = parseInt(e.target.dataset.id);
            let cart = JSON.parse(localStorage.getItem("cart")) || [];

            const existingItem = cart.find(item => item.id === id);
            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                const product = catalog.find(p => p.id === id);
                if (product) {
                    cart.push({ ...product, quantity: 1 });
                }
            }

            localStorage.setItem("cart", JSON.stringify(cart));
            alert("Book added to cart!");
        }
    });
}

function loadCartPage() {
    const cartContainer = document.getElementById("cart-items");
    const totalPrice = document.getElementById("total-price");
    const subtotalPrice = document.getElementById("subtotal-price");
    const shippingCost = 1000;
    if (!cartContainer || !totalPrice || !subtotalPrice) return;

    const cart = JSON.parse(localStorage.getItem("cart")) || [];
    cartContainer.innerHTML = "";
    let subtotal = 0;

    cart.forEach(item => {
        const row = document.createElement("div");
        row.className = "cart-item";
        row.innerHTML = `
            <div class="container-bookcover"> <img src="${item.image}" alt="${item.name}" class="cart-book-image"> </div>
            <div class="item-details">
                <div class="book-title">${item.name}</div>
                <div class="book-author">By ${item.author}</div>
                <div class="quantity-section">
                    <button class="decrease-qty" data-id="${item.id}">-</button>
                    <span class="quantity" data-id="${item.id}">${item.quantity}</span>
                    <button class="increase-qty" data-id="${item.id}">+</button>
                </div>
            </div>
            <div class="item-actions">
                <button data-id="${item.id}" class="remove-item">Delete</button>
                <div class="price"> ${item.price * item.quantity} â‚¸</div>
            </div>
        `;
        cartContainer.appendChild(row);
        subtotal += item.price * item.quantity;
    });

    subtotalPrice.textContent = subtotal;
    const total = subtotal + shippingCost;
    totalPrice.textContent = total;
}

function handleQuantityChange() {
    document.addEventListener("click", (e) => {
        const cart = JSON.parse(localStorage.getItem("cart")) || [];
        if (e.target.classList.contains("increase-qty")) {
            const id = parseInt(e.target.dataset.id);
            const item = cart.find(p => p.id === id);
            if (item) {
                item.quantity += 1;
                localStorage.setItem("cart", JSON.stringify(cart));
                loadCartPage();
            }
        }

        if (e.target.classList.contains("decrease-qty")) {
            const id = parseInt(e.target.dataset.id);
            const item = cart.find(p => p.id === id);
            if (item && item.quantity > 1) {
                item.quantity -= 1;
                localStorage.setItem("cart", JSON.stringify(cart));
                loadCartPage();
            }
        }
    });
}

function handleRemoveFromCart() {
    document.addEventListener("click", (e) => {
        if (e.target.classList.contains("remove-item")) {
            const id = parseInt(e.target.dataset.id);
            let cart = JSON.parse(localStorage.getItem("cart")) || [];
            cart = cart.filter(item => item.id !== id);
            localStorage.setItem("cart", JSON.stringify(cart));
            loadCartPage(); 
        }
    });
}

const modalContainer = document.getElementById("pop-up-modal");

const closeButton = document.createElement("span");
closeButton.classList.add("close-button");
closeButton.innerHTML = "&times;";  // The close "X" symbol

// Function to dynamically create modal content
function createModalContent(product) {
    // Modal structure
    const modalContent = `
        <div class="modal-content">
            <div class="book-image">
                <img id="modal-image" src="${product.image}" alt="${product.name}">
            </div>
            <div class="book-details">
                <div class="title-line">
                    <h3 id="modal-title">${product.name}</h3>
                    <img src="images/stars1.png" alt="stars">
                </div>
                <h4 id="modal-author">${product.author}</h4>
                <h2 id="modal-price">${product.price} â‚¸</h2>
                <p id="modal-description">${product.description}</p>
                <p>Publisher: <span id="modal-publisher">${product.Publisher}</span></p>
                <p>Genre: <span id="modal-genre">${product.genre}</span></p>
                <p>Language: English</p>
                <p>Pages: <span id="modal-pages">${product.Pages}</span></p>
                <button id="modal-add-to-cart" class="add-to-cart">
                    <img src="images/cart1.png" alt="cart">
                    <p> Add to cart</p>
                </button>
            </div>
        </div>
    `;
    modalContainer.innerHTML = modalContent;
    modalContainer.appendChild(closeButton);  // Add close button

    // Make the modal visible
    modalContainer.classList.remove("hidden");
    modalContainer.style.display = "flex";  // Show modal
}

// Function to close modal
function closeModal() {
    modalContainer.innerHTML = '';  // Clear the modal content
    modalContainer.style.display = "none";  // Hide the modal
}

// Event listener to handle modal actions
document.addEventListener("click", function (event) {
    // Open modal on "View More" click
    if (event.target.classList.contains("view-more-btn")) {
        const id = parseInt(event.target.getAttribute("data-id"));
        const product = catalog.find(item => item.id === id);

        if (product) {
            createModalContent(product);  // Create and show modal with product data
        }
    }

    // Close modal when clicking on the close button or outside modal content
    if (event.target === closeButton || event.target === modalContainer) {
        closeModal();  // Close the modal
    }
});


// Run on DOM load
document.addEventListener("DOMContentLoaded", () => {
    loadRomance();        
    loadMystery();
    loadFantasy();
    loadBiography();
    handleAddToCart();         
    loadCartPage();            
    handleRemoveFromCart();  
    handleQuantityChange(); 
});
